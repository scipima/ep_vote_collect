---
title: "Shares of Votes "
date: "`r Sys.Date()`"
format: 
  html:
    embed-resources: true
    toc: true
    toc-depth: 3
    toc-title: Contents
    number-sections: true
    colorlinks: true
editor_options: 
  chunk_output_type: console
execute:
  echo: false
  warning: false
---

## Intro
```{r misc}
#| include: false

###--------------------------------------------------------------------------###
# rm(list = ls())
start_report <- Sys.time()

###--------------------------------------------------------------------------###
## Libraries -------------------------------------------------------------------
if (!require("pacman")) install.packages("pacman")
pacman::p_load(char = c("data.table", "dplyr", "tidyr", "tidyselect", "future.apply",
                        "here", "lubridate", "janitor", "ggplot2", "duckdb", "duckplyr") )

###--------------------------------------------------------------------------###
# Graphics ---------------------------------------------------------------------
vote_colours <- c(`for` = '#00AEEF',
                  against = '#BE3455',
                  abstain = "#969696",
                  `no vote` = '#5D5CA4',
                  absent = '#F47920')

###--------------------------------------------------------------------------###
# Functions --------------------------------------------------------------------
###--------------------------------------------------------------------------###
# Load join functions ---------------------------------------------------------#
source(file = here::here("source_scripts_r", "join_functions.R") )
# get vector of independents
independents_ids <- national_parties$identifier[
  grepl(pattern = "^-$|^Ind.$|^Indépendant$|^Independent$|^Independiente$", 
        x = national_parties$label)
  | grepl(pattern = "^-$|^Ind.$|^Indépendant$|^Independent$|^Independiente$", 
          x = national_parties$pref_label_en)]
independents <- c("-", "Ind.", "Indépendant", "Independent", "Independiente")


# Calculate Majorities --------------------------------------------------------#
source(file = here::here("source_scripts_r", "get_majority.R") )
```

The objective of this short note is to showcase some of the possible use cases of the data gathered via the [EP Open Data Portal API](https://data.europarl.europa.eu/en/developer-corner/opendata-api).


## Data and Methods
We include in our analysis all voting data relative to RCVs during the period 2019-`r data.table::year(Sys.Date())`.
```{r}
#| include: false

###--------------------------------------------------------------------------###
## Read data -------------------------------------------------------------------
### RCV ------------------------------------------------------------------------
meps_rcv_mandate <- data.table::fread( here::here("data_out", "meps_rcv_mandate.csv") ) 

# Fix change of name of `The Left`
meps_rcv_mandate[polgroup_id == 5151L, polgroup_id := 6259L]
```

### Wins and losses during the 9th EP mandate
```{r}
###----------------------------------------------------------------------------#
# Get House' majority by rcv_id
who_won_house <- get_house_majority(data_in = meps_rcv_mandate)

# Check what Group voted the same -------------------------###
who_won_bypolgroup <- get_polgroup_majority() 

###----------------------------------------------------------------------------#
## calculate similarity --------------------------------------------------------
who_won_house_polgroup <- merge(
  x = who_won_house,
  y = who_won_bypolgroup, 
  by = "rcv_id", all = FALSE) |> 
  join_polit_labs()

# Are House and Group aligned? ------------------------------------------------#
who_won_house_polgroup[, is_same := as.integer(result.x == result.y)] 

who_won_house_polgroup |> 
  ggplot(aes(x = forcats::fct_rev(political_group), y = factor(rcv_id), 
             fill = factor(is_same))) +
  geom_raster(show.legend = FALSE, ) +
  coord_flip() +
  labs(x="", y="Votes IDs",
       title = "EP Political Groups' wins and losses during the 9th mandate)",
       subtitle = "If a Political Group was part of the winning majority is coloured in blue, red otherwise",
       caption = "Source: EP Open Data Portal. Notes: Data is only relative to RCVs." ) +
  scale_fill_brewer(type = "qual", palette = 6, direction = 1) +
  theme_minimal() +
  theme(plot.title.position = "plot",
        plot.title = element_text(face = "bold"),
        panel.grid.minor.y = element_line(colour = "black", linewidth = 5),
        axis.title.x = element_text(size=8),
        axis.text.x = element_blank(),
        axis.text.y = element_text(face = "bold"),
        axis.ticks = element_blank())
ggsave(here::here("figures", "polgroup_winshares.pdf"), dpi=300, device = "pdf", height=4, width=8) 
ggsave(here::here("figures", "polgroup_winshares.jpeg"), dpi=300, device = "jpeg", height=4, width=8)        
```


## Reproducibility information
```{r}
# reproducibility info
sessionInfo()
# rendering time
end_report <- Sys.time()
end_report - start_report
```
